@model dynamic
@{
    ViewData["Title"] = "HaberSitesi";
}
<div class="row">     
    <div class="col-7">
        <a href="https://www.google.com/search?q= @(Model[1]["Url"])" target="_blank">
            <img id="col1" src="@Model[1]["primaryImage"]" class="img-fluid mt-5 vw-100" />
        </a> 
        <h1 class="mt-3 bg-danger">
            <a href="https://www.google.com/search?q= @(Model[1]["Url"])" target="_blank" class="text-white text-decoration-none">
                @(Model[1]["TitleShort"] != null ? Model[1]["TitleShort"] : Model[1]["Title"])
            </a>
        </h1>
    </div>
    <div class="col-5 d-flex flex-column">
        <a href="https://www.google.com/search?q= @(Model[2]["Url"])" target="_blank">
            <img id="col2" src="@Model[2]["secondaryImage"]" class="img-fluid mt-5 vw-100" />
        </a>
        <a href="https://www.google.com/search?q= @(Model[3]["Url"])" target="_blank">
            <img id="col3" src="@Model[3]["secondaryImage"]" class="img-fluid mt-2 vw-100" />
        </a>
    </div>
    @{
        for (int i = 4; i < 8; i++)
        {
            <div class="col-3 mt-4">
                <a href="https://www.google.com/search?q= @(Model[i]["Url"])" target="_blank">
                    <img src="@Model[i]["primaryImage"]" class="img-fluid" />
                </a>
                <h2 class="my-2 mb-5">
                    <a href="https://www.google.com/search?q= @(Model[i]["Url"])" target="_blank" class=" text-dark text-decoration-none">
                        @(Model[i]["TitleShort"] != null ? Model[i]["TitleShort"] : Model[i]["Title"])
                    </a>
                </h2>
            </div>
        }
    }
    @{
        for (int i = 10; i < 13; i++)
        {
            <h3 class="mt-5 text-center">
                @Model[i]["Title"]
            </h3>
            <p>
                @Model[i]["Spot"]
            </p>
        }
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function adjustColumnHeights() {
            var col1 = document.getElementById('col1');
            var col2 = document.getElementById('col2');
            var col3 = document.getElementById('col3');
            var marginTopValue = parseInt(getComputedStyle(col3).marginTop, 10);

            var maxHeight = col1.offsetHeight - marginTopValue;
            var halfOne = maxHeight / 2;
            col2.style.height = halfOne + 'px';
            col3.style.height = halfOne + 'px';
        }
        window.addEventListener('load', function () {
            adjustColumnHeights();  
        });
        window.addEventListener('resize', function () {  
            adjustColumnHeights();
        });
    </script>
}
